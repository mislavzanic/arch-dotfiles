#!/bin/bash

parse_yaml() {
    result=($(yq "$1" "$2" | sed 's/\"//g' | tr '\n' ' '))
    echo "${result[@]}"
}

clean_xmonad() {
    cd $HOME/dotfiles/.config/xmonad
    rm -rf .stack-work
    rm -rf mexmonad.cabal
    rm -rf stack.yaml.lock
    rm -rf xmonad.hi xmonad.o
}

backup_git() {
    cd "$1"
    git add .
    git commit -m "$2"
    git push origin master
}

move_item() {
    if [ -d "$1" ]; then
        rm -rf "$2" && cp -r "$1" "$2"
    elif [ -f "$1" ]; then
        rm -rf "$2" && cp -r "$1" "$2"
    fi
}

backup_sys_dots() {
    repo=$(parse_yaml '.git_repos.dotfiles.ssh' "$HOME/.config/config.yaml")
    git clone $repo $HOME/dotfiles
    dirs_to_backup=$(parse_yaml '.backup | keys[]' "$HOME/.config/config.yaml")
    for dir in $dirs_to_backup; do
        dirs=$(parse_yaml ".backup.$dir[]" "$HOME/.config/config.yaml")
        if [ $dir == 'local' ] || [ $dir == 'config' ]; then
             dir=".$dir"
        fi
        for item in $dirs; do
            move_item "$HOME/$dir/$item" "$HOME/dotfiles/$dir/$item"
        done
    done
    clean_xmonad
    backup_git $HOME/dotfiles "$1"
    cd $HOME
    rm -rf $HOME/dotfiles
}

backup_install() {
    [ -d $HOME/.local/bin/arch_install ] && { backup_git $HOME/.local/bin/arch_install "$1" && exit; } || { git clone git@github.com:mislavzanic/arch_install.git && exit; }
}

backup() {
    [ "$1" == 'dots' ] && backup_sys_dots "$2"
    [ "$1" == 'install' ] && backup_install "$2"
}

BACKUP=''
MESSAGE='backup'

while [ $# -gt 0 ]; do

   if [[ $1 == *"--"* ]]; then
        param="${1/--/}"
        [ $param == 'backup' ] && BACKUP="$2"
        [ $param == 'message' ] && MESSAGE="$2"
   fi

  shift
done

backup "$BACKUP" "$MESSAGE"
